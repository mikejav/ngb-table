!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("projects/ngb-table/src/lib/children-selectors/ngb-table-subheader.directive"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngb-table",["exports","@angular/core","projects/ngb-table/src/lib/children-selectors/ngb-table-subheader.directive","@angular/common"],t):t((e=e||self)["ngb-table"]={},e.ng.core,e.ngbTableSubheader_directive,e.ng.common)}(this,function(e,t,n,o){"use strict";function r(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,r,a=n.call(e),c=[];try{for(;(void 0===t||t-- >0)&&!(o=a.next()).done;)c.push(o.value)}catch(e){r={error:e}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return c}function a(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e}var c=function(){function e(){}return e.decorators=[{type:t.Directive,args:[{selector:"[ngbTableHeader]"}]}],e.ctorParameters=function(){return[]},e}(),s=function(){function e(){}return e.decorators=[{type:t.Directive,args:[{selector:"[ngbTableSelectActionsHeader]"}]}],e.ctorParameters=function(){return[]},e}(),l=function(){function e(){}return e.decorators=[{type:t.Directive,args:[{selector:"[ngbTableHead]"}]}],e.ctorParameters=function(){return[]},e}(),i=function(){function e(){}return e.decorators=[{type:t.Directive,args:[{selector:"[ngbTableBodyRow]"}]}],e.ctorParameters=function(){return[]},e}(),d=function(){function e(e){this.templateRef=e}return e.decorators=[{type:t.Directive,args:[{selector:"[ngbTableFooterRow]"}]}],e.ctorParameters=function(){return[{type:t.TemplateRef}]},e}(),p=function(){function e(){}return e.decorators=[{type:t.Directive,args:[{selector:"[ngbTableFooter]"}]}],e.ctorParameters=function(){return[]},e}(),g=function(){function e(){var e=this;this.rowIdColumnName="id",this.selectable=!1,this.selectedRowsIds=[],this.selectedRowsIdsChange=new t.EventEmitter,this.rowTracker=function(t,n){return n[e.rowIdColumnName]+e.rows.length}}return e.prototype.ngOnInit=function(){},e.prototype.isRowSelected=function(e){var t=e[this.rowIdColumnName];return this.selectedRowsIds.indexOf(t)>-1},e.prototype.selectRow=function(e){var t=e[this.rowIdColumnName],n=a(this.selectedRowsIds,[t]);this.selectedRowsIdsChange.emit(n)},e.prototype.selectAllRows=function(){var e=this,t=[];this.rows.forEach(function(n){var o=n[e.rowIdColumnName];t.push(o)}),this.selectedRowsIdsChange.emit(t)},e.prototype.unselectRow=function(e){var t=e[this.rowIdColumnName],n=this.selectedRowsIds.indexOf(t),o=a(this.selectedRowsIds);o.splice(n,1),this.selectedRowsIdsChange.emit(o)},e.prototype.unselectAllRows=function(){this.selectedRowsIdsChange.emit([])},e.prototype.toggleRowSelection=function(e){this.isRowSelected(e)?this.unselectRow(e):this.selectRow(e)},e.prototype.toggleSelectAllRows=function(){this.areAllRowsSelected?this.unselectAllRows():this.selectAllRows()},Object.defineProperty(e.prototype,"areAllRowsSelected",{get:function(){var e=this,t=0;return this.rows.forEach(function(n){var o=n[e.rowIdColumnName];e.selectedRowsIds.indexOf(o)>-1&&t++}),t===this.rows.length&&this.rows.length},enumerable:!0,configurable:!0}),e.decorators=[{type:t.Component,args:[{selector:"ngb-table",template:'<div class="card ngbTableRoot" [ngClass]="{\'border-primary\': selectedRowsIds.length }">\n  <div class="card-header" [ngClass]="{\'bg-primary text-light\': selectedRowsIds.length && selectActionsHeaderTemplate}"\n    *ngIf="headerTemplate">\n    <ng-container *ngIf="selectedRowsIds.length && selectActionsHeaderTemplate; else noRowsSelected">\n      <ng-container *ngTemplateOutlet="selectActionsHeaderTemplate"></ng-container>\n    </ng-container>\n    <ng-template #noRowsSelected>\n      <ng-container *ngTemplateOutlet="headerTemplate"></ng-container>\n    </ng-template>\n  </div>\n\n  <ng-container *ngFor="let subHeaderTemplate of subheaderTemplates">\n    <div class="card-header">\n      <ng-container *ngTemplateOutlet="subHeaderTemplate.templateRef"></ng-container>\n    </div>\n  </ng-container>\n\n  <table class="table table-responsive m-0">\n\n    <thead>\n      <tr>\n        <th class="w-01 align-top" *ngIf="selectable">\n          <ngb-checkbox [checked]="areAllRowsSelected" [disabled]="!rows.length" (checkChange)="toggleSelectAllRows()">\n          </ngb-checkbox>\n        </th>\n        <ng-container *ngTemplateOutlet="headTemplate"></ng-container>\n      </tr>\n    </thead>\n\n    <tbody>\n      <ng-container *ngIf="rows.length">\n        <ng-container *ngFor="let row of rows; trackBy: rowTracker">\n          <tr [ngClass]="{\'table-primary\': isRowSelected(row)}">\n            <td class="align-middle" *ngIf="selectable">\n              <ngb-checkbox [checked]="isRowSelected(row)" (checkChange)="toggleRowSelection(row)"></ngb-checkbox>\n            </td>\n            <ng-container *ngTemplateOutlet="bodyRowTemplate; context: { $implicit: row }"></ng-container>\n          </tr>\n        </ng-container>\n        <ng-container *ngFor="let footerRowTemplate of footerRowTemplates">\n          <tr>\n            <td *ngIf="selectable"></td>\x3c!-- empty table cell to fill no checkbox space --\x3e\n            <ng-container *ngTemplateOutlet="footerRowTemplate.templateRef"></ng-container>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </tbody>\n\n  </table>\n\n  <div class="card-footer" *ngIf="footerTemplate">\n    <ng-container *ngTemplateOutlet="footerTemplate"></ng-container>\n  </div>\n\n</div>',styles:[".w-01{width:1%}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={rows:[{type:t.Input}],rowIdColumnName:[{type:t.Input}],selectable:[{type:t.Input}],selectedRowsIds:[{type:t.Input}],selectedRowsIdsChange:[{type:t.Output}],headerTemplate:[{type:t.ContentChild,args:[c,{static:!1,read:t.TemplateRef}]}],subheaderTemplates:[{type:t.ContentChildren,args:[n.NgbTableSubheaderDirective,{descendants:!1}]}],selectActionsHeaderTemplate:[{type:t.ContentChild,args:[s,{static:!1,read:t.TemplateRef}]}],headTemplate:[{type:t.ContentChild,args:[l,{static:!1,read:t.TemplateRef}]}],bodyRowTemplate:[{type:t.ContentChild,args:[i,{static:!1,read:t.TemplateRef}]}],footerRowTemplates:[{type:t.ContentChildren,args:[d,{descendants:!1}]}],footerTemplate:[{type:t.ContentChild,args:[p,{static:!1,read:t.TemplateRef}]}]},e}(),u=function(){function e(){this.disabled=!1,this.checkChange=new t.EventEmitter}return e.prototype.toggleChecked=function(){this.checkChange.emit(!this.checked)},e.decorators=[{type:t.Component,args:[{selector:"ngb-checkbox",template:'<div\n  class="checkbox"\n  [ngClass]="{\n    \'checked\': checked,\n    \'disabled\': disabled\n  }"\n  (click)="disabled ? null : toggleChecked()"\n></div>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:['.checkbox{position:relative;width:22px;height:22px;border:2px solid var(--secondary);opacity:.7;border-radius:3px}.checkbox:after{position:absolute;top:3px;left:6px;content:"";width:6px;height:11px;border-bottom:2px solid transparent;border-right:2px solid transparent;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.checkbox:hover:not(.disabled){opacity:1;cursor:pointer}.checkbox.checked{border-color:var(--primary);background:var(--primary);opacity:1}.checkbox.checked:after{border-bottom-color:var(--white);border-right-color:var(--white)}.checkbox.disabled{opacity:.5}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={checked:[{type:t.Input}],disabled:[{type:t.Input}],checkChange:[{type:t.Output}]},e}(),h=function(){function e(e){this.templateRef=e}return e.decorators=[{type:t.Directive,args:[{selector:"[ngbTableSubheader]"}]}],e.ctorParameters=function(){return[{type:t.TemplateRef}]},e}(),b=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[g,c,h,s,l,i,p,d,u],imports:[o.CommonModule],exports:[g,c,h,s,l,i,p,d]}]}],e}();e.NgbTableModule=b,e.ɵa=g,e.ɵb=c,e.ɵc=s,e.ɵd=l,e.ɵe=i,e.ɵf=d,e.ɵg=p,e.ɵh=h,e.ɵi=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngb-table.umd.min.js.map